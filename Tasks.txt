For this project I have decided to create a price logger for smartphones' price. 
Recently, I tried to resell my phone to get an new one. I was shocked to see the value depreciation after 3 years.
Therefore, I thought it would be a good idea to create a price logger to see the change in price of an smartphone after the release.
For this first version, the inputs will be hard coded. However, i hope to implement some web scrapping to add the logs automatically.


For the database I will create three tables that will be related:

Brand table ( contains all the brands available) --> one to many --> Phone table ( contains all the phone models available ) ---> one to many --> price log table (change in prices for each phone model)

FrontEnd Layout

- Main Page
    - Show all phones (brand_name, model ,release_date, release_price)
    - functionalities 
        - Delete phone
        - Update phone
        - Create phone
        - Stats phone (get a chart displaying all the prices for that model)

- Prices Page
    - Show all prices for a phone model in a chart
    - functionalities 
        - Delete price
        - Update price
        - create price

- Update Pages:
    - Update phone details
    - Update price details


BackEnd Table Layout:

- Brands
    - Id
    - Brand

- Models
    - Id
    - Brand_name (reference key Brand of Brands)
    - Model
    - Release_price
    - release_date

- Prices
    - Id
    - Model_id (reference key id of Models)
    - date_added
    - Price

BackEnd APIs:

- Brands
    - GET brands
    - Create Brand

- Models
    - GET phones
    - GET phone (:id phone)
    - UPDATE phone (:id phone)
    - DELETE phone (:id phone)
    - POST phone

- Prices
    - GET Prices for phone (:id phone)
    - GET Single Price or phone (:id price)
    - UPDATE Price (:id price)
    - DELETE Price (:id price)
    - POST Price


   Comment:

   Taking a break